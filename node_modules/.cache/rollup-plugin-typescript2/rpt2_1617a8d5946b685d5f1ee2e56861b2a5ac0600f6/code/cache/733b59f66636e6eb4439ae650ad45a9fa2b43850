{"code":"class SimPrim {\n    constructor(inputCvs) {\n        this.cx = 0; // トリミング領域の中心X座標\n        this.cy = 0; // トリミング領域の中心Y座標\n        this.dx = 0; // トリミング画像の描画位置（X軸）\n        this.dy = 0; // トリミング画像の描画位置（Y軸）\n        this.beforeDx = 0; // 前フレームのX座標\n        this.beforeDy = 0; // 前フレームのY座標\n        this.scaleWidth = 0; // キャンバス幅とクライアント幅の比率\n        this.scaleHeight = 0; // キャンバス高さとクライアント高さの比率\n        this.resizing = false; // サイズ変更中かどうか\n        this.dragging = false; // 範囲内でのドラッグフラグ\n        this.isDragging = false; // ドラッグ中かどうか\n        this.decisionWH = false; // 横長か縦長か\n        this.isAnimating = false; // アニメーション中かどうか\n        this.defaultCursor = true; // デフォルトカーソルのフラグ\n        this.drawTrimmingWidth = 0; // トリミングの幅\n        this.drawTrimmingHeight = 0; // トリミングの高さ\n        this.inputCvs = inputCvs;\n        this.inputCtx = this.inputCvs.getContext(\"2d\");\n    }\n    /**\n     * Initialize the SimPrim instance with an image, preview canvas, and trimming path.\n     * @param img - The image to be edited.\n     * @param trimmingPath - The path to the trimming image.\n     * @param inputCvsHeight - Optional : The height of the input canvas when height is longer than width.　If you want to trim a vertical image, you must explicitly specify it.\n     * @param inputCvsWidth - Optional : The width of the input canvas when height is longer than width. If you want to trim a vertical image, you must explicitly specify it.\n     */\n    init(img, trimmingPath, inputCvsHeight, inputCvsWidth) {\n        var _a;\n        this.img = img;\n        let drawWidth = 0;\n        let drawHeight = 0;\n        this.inputCvs.width = this.img.width;\n        this.inputCvs.height = this.img.height;\n        // 画像の縦横比を判定し、縦長の場合は高さ優先に設定\n        if (this.img.width <= this.img.height) {\n            this.decisionWH = false;\n            this.inputCvs.style.cssText += \"height:\" + inputCvsHeight + \";\" + \"width:\" + inputCvsWidth + \";\";\n        }\n        else {\n            this.decisionWH = true;\n        }\n        // Canvasに画像を描画する際の幅と高さを設定\n        drawWidth = this.inputCvs.width;\n        drawHeight = this.inputCvs.height;\n        (_a = this.inputCtx) === null || _a === void 0 ? void 0 : _a.drawImage(this.img, 0, 0, this.img.width, this.img.height, 0, 0, drawWidth, drawHeight);\n        // トリミング画像を初期化\n        const trimming = new Image();\n        this.trimming = trimming;\n        if (this.decisionWH) {\n            this.drawTrimmingHeight = (this.inputCvs.height / 3) * 2;\n            this.drawTrimmingWidth = this.drawTrimmingHeight;\n        }\n        else {\n            this.drawTrimmingWidth = (this.inputCvs.width / 3) * 2;\n            this.drawTrimmingHeight = this.drawTrimmingWidth;\n        }\n        this.trimming.onload = () => {\n            var _a;\n            if (this.trimming) {\n                (_a = this.inputCtx) === null || _a === void 0 ? void 0 : _a.drawImage(this.trimming, 0, 0, trimming.width, trimming.height, this.dx, this.dy, this.drawTrimmingWidth, this.drawTrimmingHeight);\n            }\n        };\n        this.trimming.src = trimmingPath;\n        // プレビューキャンバスに、初期化したトリミング野郎が指定してる範囲を描画\n        // マウスが動くごとにプレビュー描画\n        this.inputCvs.addEventListener(\"mousemove\", () => {\n            if (this.draggingFrame)\n                cancelAnimationFrame(this.draggingFrame); // 既存のアニメーションをキャンセル\n            if (this.defaultCursor) {\n                this.inputCvs.style.cursor = \"default\"; // マウスを普通に戻す\n            }\n        });\n        // windowにしてるのは、マウスがキャンバスから出てもドラッグを続けられるようにするため\n        window.addEventListener(\"mouseup\", () => {\n            this.isDragging = false;\n            this.resizing = false;\n            this.dragging = false;\n            if (this.draggingFrame)\n                cancelAnimationFrame(this.draggingFrame); // 既存のアニメーションをキャンセル\n        });\n    }\n    /**\n     * Detects mouse drag events on the canvas and allows for dragging the trimming area.\n     * @param previewCvs - Optional : The canvas for previewing the trimmed image.\n     */\n    dragDetection(previewCvs) {\n        if (previewCvs)\n            this.previewImg(previewCvs); // プレビューcanvasに描画\n        this.inputCvs.addEventListener(\"mousedown\", () => {\n            this.isDragging = true; // ドラッグフラグ\n        });\n        this.inputCvs.addEventListener(\"mousemove\", (e) => {\n            if (this.draggingFrame)\n                cancelAnimationFrame(this.draggingFrame); // 既存のアニメーションをキャンセル\n            if (this.defaultCursor) {\n                this.inputCvs.style.cursor = \"default\"; //　マウスを普通に戻す\n            }\n            this.scaleWidth = this.inputCvs.width / this.inputCvs.clientWidth; // 比率計算\n            this.scaleHeight = this.inputCvs.height / this.inputCvs.clientHeight; // 同じく\n            this.cx = this.dx / this.scaleWidth + this.drawTrimmingWidth / this.scaleWidth / 2; // 中心座標計算\n            this.cy = this.dy / this.scaleHeight + this.drawTrimmingHeight / this.scaleHeight / 2; // 同じく\n            if (e.offsetX >= this.cx - 10 && e.offsetX <= this.cx + 10 && e.offsetY >= this.cy - 10 && e.offsetY <= this.cy + 10) {\n                this.inputCvs.style.cursor = \"move\"; //　マウスを十字キーに\n                this.defaultCursor = false;\n                if (this.isDragging) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.defaultCursor = true;\n            }\n            if (this.dragging) {\n                this.inputCvs.style.cursor = \"move\"; //　上の指定範囲から出てもドラッグ中は十字キーにするようにする\n                this.beforeDx = this.dx;\n                this.beforeDy = this.dy;\n                // マウスドラッグによるトリミング領域の移動\n                this.dx = (e.offsetX - this.drawTrimmingWidth / this.scaleWidth / 2) * this.scaleWidth;\n                this.dy = (e.offsetY - this.drawTrimmingHeight / this.scaleHeight / 2) * this.scaleHeight;\n                // トリミング領域のはみ出しチェック\n                if (this.trimming && this.img) {\n                    if (this.dx <= 0)\n                        this.dx = 0;\n                    if (this.dy <= 0)\n                        this.dy = 0;\n                    if (this.dx + this.drawTrimmingWidth >= this.img.width)\n                        this.dx = this.img.width - this.drawTrimmingWidth;\n                    if (this.dy + this.drawTrimmingHeight >= this.img.height)\n                        this.dy = this.img.height - this.drawTrimmingHeight;\n                    if (!this.isAnimating) {\n                        this.isAnimating = true;\n                        this.draggingFrame = requestAnimationFrame(() => {\n                            var _a, _b;\n                            if (this.img && this.trimming) {\n                                (_a = this.inputCtx) === null || _a === void 0 ? void 0 : _a.drawImage(this.img, this.beforeDx - 1, this.beforeDy - 1, this.drawTrimmingWidth + 2, this.drawTrimmingHeight + 2, this.beforeDx - 1, this.beforeDy - 1, this.drawTrimmingWidth + 2, this.drawTrimmingHeight + 2);\n                                (_b = this.inputCtx) === null || _b === void 0 ? void 0 : _b.drawImage(this.trimming, 0, 0, this.trimming.width, this.trimming.height, this.dx, this.dy, this.drawTrimmingWidth, this.drawTrimmingHeight);\n                            }\n                            if (previewCvs)\n                                this.previewImg(previewCvs); // フレームが生成された時にプレビューキャンバスにトリミング範囲を描画\n                        });\n                        this.isAnimating = false;\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Detects mouse drag events on the corners of the trimming area, allowing it to be resized.\n     */\n    sizeChange() {\n        let property = \"\"; // マウスが今どこにいるか\n        let beforeWidth = 0; // サイズ変更前の幅\n        let beforeHeight = 0; // サイズ変更前の高さ\n        // サイズ変更可能エリアのマウスオーバー判定\n        this.inputCvs.addEventListener(\"mousemove\", (e) => {\n            var _a, _b, _c, _d, _e;\n            // 左側のサイズ変更エリア\n            if (e.offsetX * this.scaleWidth >= this.dx - 15 && e.offsetX * this.scaleWidth <= this.dx + 15) {\n                // 左上\n                if (e.offsetY * this.scaleHeight >= this.dy - 15 && e.offsetY * this.scaleHeight <= this.dy + 15) {\n                    property = \"upL\";\n                    this.inputCvs.style.cursor = \"nwse-resize\";\n                    this.defaultCursor = false;\n                    if (this.isDragging) {\n                        this.resizing = true;\n                    }\n                }\n                else {\n                    this.defaultCursor = true;\n                }\n                // 左下\n                if (e.offsetY * this.scaleHeight >= this.dy + this.drawTrimmingHeight - 15 && e.offsetY * this.scaleHeight <= this.dy + this.drawTrimmingHeight + 15) {\n                    property = \"downL\";\n                    this.inputCvs.style.cursor = \"nesw-resize\";\n                    this.defaultCursor = false;\n                    if (this.isDragging) {\n                        this.resizing = true;\n                    }\n                }\n                else {\n                    this.defaultCursor = true;\n                }\n            }\n            else {\n                this.defaultCursor = true;\n            }\n            // 右側のサイズ変更エリア\n            if (e.offsetX * this.scaleWidth >= this.dx + this.drawTrimmingWidth - 15 && e.offsetX * this.scaleWidth <= this.dx + this.drawTrimmingWidth + 15) {\n                // 右上\n                if (e.offsetY * this.scaleHeight >= this.dy - 15 && e.offsetY * this.scaleHeight <= this.dy + 15) {\n                    property = \"upR\";\n                    this.inputCvs.style.cursor = \"nesw-resize\";\n                    this.defaultCursor = false;\n                    if (this.isDragging) {\n                        this.resizing = true;\n                    }\n                }\n                else {\n                    this.defaultCursor = true;\n                }\n                // 右下\n                if (e.offsetY * this.scaleHeight >= this.dy + this.drawTrimmingHeight - 15 && e.offsetY * this.scaleHeight <= this.dy + this.drawTrimmingHeight + 15) {\n                    property = \"downR\";\n                    this.inputCvs.style.cursor = \"nwse-resize\";\n                    this.defaultCursor = false;\n                    if (this.isDragging) {\n                        this.resizing = true;\n                    }\n                }\n                else {\n                    this.defaultCursor = true;\n                }\n            }\n            else {\n                this.defaultCursor = true;\n            }\n            // トリミング領域のサイズ変更処理\n            if (this.resizing) {\n                beforeWidth = this.drawTrimmingWidth;\n                beforeHeight = this.drawTrimmingHeight;\n                if (property == \"downR\" && this.img) {\n                    this.inputCvs.style.cursor = \"nwse-resize\";\n                    // サイズ変更判定\n                    if (e.movementX != 0)\n                        this.drawTrimmingWidth += e.movementX * this.scaleWidth;\n                    if (e.movementY != 0)\n                        this.drawTrimmingHeight += e.movementY * this.scaleHeight;\n                    if (e.movementX != 0 && e.movementY != 0) {\n                        this.drawTrimmingWidth += 2 * (e.movementX / this.scaleWidth / 4) - e.movementX / this.scaleWidth / 2;\n                        this.drawTrimmingHeight += 2 * (e.movementY / this.scaleHeight / 4) - e.movementX / this.scaleHeight / 2;\n                    }\n                    this.drawTrimmingHeight = this.drawTrimmingWidth;\n                    // はみ出し判定\n                    if (this.dx + this.drawTrimmingWidth >= this.img.width) {\n                        this.drawTrimmingWidth = this.img.width - this.dx;\n                        this.drawTrimmingHeight = this.drawTrimmingWidth;\n                    }\n                    if (this.dy + this.drawTrimmingHeight >= this.img.height) {\n                        this.drawTrimmingHeight = this.img.height - this.dy;\n                        this.drawTrimmingWidth = this.drawTrimmingHeight;\n                    }\n                    (_a = this.inputCtx) === null || _a === void 0 ? void 0 : _a.drawImage(this.img, this.dx - 1, this.dy - 1, beforeWidth + 2, beforeHeight + 2, this.dx - 1, this.dy - 1, beforeWidth + 2, beforeHeight + 2);\n                }\n                if (property == \"upR\" && this.img) {\n                    this.beforeDy = this.dy;\n                    this.inputCvs.style.cursor = \"nesw-resize\";\n                    // サイズ変更判定\n                    if (e.movementX != 0) {\n                        this.dy -= e.movementX * this.scaleWidth;\n                        this.drawTrimmingWidth += e.movementX * this.scaleWidth;\n                    }\n                    this.drawTrimmingHeight = this.drawTrimmingWidth;\n                    // はみ出し判定\n                    if (this.dx + this.drawTrimmingWidth >= this.img.width)\n                        this.drawTrimmingWidth = this.img.width - this.dx;\n                    if (this.dy <= 0) {\n                        this.dy = 0;\n                        this.drawTrimmingHeight = beforeHeight;\n                        this.drawTrimmingWidth = beforeWidth;\n                    }\n                    (_b = this.inputCtx) === null || _b === void 0 ? void 0 : _b.drawImage(this.img, this.dx - 1, this.beforeDy - 1, beforeWidth + 2, beforeHeight + 2, this.dx - 1, this.beforeDy - 1, beforeWidth + 2, beforeHeight + 2);\n                }\n                if (property == \"downL\" && this.img) {\n                    this.beforeDx = this.dx;\n                    this.inputCvs.style.cursor = \"nesw-resize\";\n                    // サイズ変更判定\n                    if (e.movementX != 0) {\n                        this.dx += e.movementX * this.scaleWidth;\n                        this.drawTrimmingWidth -= e.movementX * this.scaleWidth;\n                    }\n                    this.drawTrimmingHeight = this.drawTrimmingWidth;\n                    // はみ出し判定\n                    if (this.dx <= 0) {\n                        this.dx = 0;\n                        this.drawTrimmingWidth = beforeWidth;\n                        this.drawTrimmingHeight = beforeHeight;\n                    }\n                    if (this.dy + this.drawTrimmingHeight >= this.img.height) {\n                        this.drawTrimmingHeight = this.img.height - this.dy;\n                        this.drawTrimmingWidth = this.drawTrimmingHeight;\n                        this.dx = this.beforeDx;\n                    }\n                    (_c = this.inputCtx) === null || _c === void 0 ? void 0 : _c.drawImage(this.img, this.beforeDx - 1, this.dy - 1, beforeWidth + 2, beforeHeight + 2, this.beforeDx - 1, this.dy - 1, beforeWidth + 2, beforeHeight + 2);\n                }\n                if (property == \"upL\") {\n                    this.beforeDx = this.dx;\n                    this.beforeDy = this.dy;\n                    this.inputCvs.style.cursor = \"nwse-resize\";\n                    // サイズ変更判定\n                    if (e.movementX != 0) {\n                        this.dx += e.movementX * this.scaleWidth;\n                        this.dy += e.movementX * this.scaleWidth;\n                        this.drawTrimmingWidth -= e.movementX * this.scaleWidth;\n                    }\n                    this.drawTrimmingHeight = this.drawTrimmingWidth;\n                    // はみ出し判定\n                    if (this.dx <= 0) {\n                        this.dx = 0;\n                        this.dy = this.beforeDy;\n                        this.drawTrimmingWidth = beforeWidth;\n                        this.drawTrimmingHeight = beforeHeight;\n                    }\n                    if (this.dy < -0) {\n                        this.dy = 0;\n                        this.dx = this.beforeDx;\n                        this.drawTrimmingWidth = beforeWidth;\n                        this.drawTrimmingHeight = beforeHeight;\n                    }\n                    if (this.img)\n                        (_d = this.inputCtx) === null || _d === void 0 ? void 0 : _d.drawImage(this.img, this.beforeDx - 1, this.beforeDy - 1, beforeWidth + 2, beforeHeight + 2, this.beforeDx - 1, this.beforeDy - 1, beforeWidth + 2, beforeHeight + 2);\n                }\n                if (this.trimming)\n                    (_e = this.inputCtx) === null || _e === void 0 ? void 0 : _e.drawImage(this.trimming, 0, 0, this.trimming.width, this.trimming.height, this.dx, this.dy, this.drawTrimmingWidth, this.drawTrimmingHeight);\n            }\n        });\n    }\n    // プレビューキャンバスにトリミング範囲を描画\n    previewImg(previewCvs) {\n        this.previewCvs = previewCvs;\n        const previewCtx = this.previewCvs.getContext(\"2d\");\n        previewCtx === null || previewCtx === void 0 ? void 0 : previewCtx.clearRect(0, 0, previewCvs.width, previewCvs.height);\n        if (this.img)\n            previewCtx === null || previewCtx === void 0 ? void 0 : previewCtx.drawImage(this.img, this.dx, this.dy, this.drawTrimmingWidth, this.drawTrimmingHeight, 0, 0, previewCvs.width, previewCvs.height);\n    }\n    /**\n     * Exports the trimmed image to a specified canvas.\n     * @param exportCvs - The canvas to which the trimmed image will be exported.\n     */\n    // トリミング領域をエクスポート用Canvasに描画\n    exportImg(exportCvs) {\n        var _a;\n        let exportCtx = exportCvs.getContext(\"2d\");\n        let exportImgObject = (_a = this.previewCvs) === null || _a === void 0 ? void 0 : _a.toDataURL();\n        let exportImgElement = new Image();\n        exportImgElement.onload = () => {\n            if (exportImgObject)\n                exportCtx === null || exportCtx === void 0 ? void 0 : exportCtx.drawImage(exportImgElement, 0, 0);\n        };\n        if (exportImgObject)\n            exportImgElement.src = exportImgObject;\n    }\n}\nif (typeof window !== \"undefined\") {\n    window.SimPrim = SimPrim;\n}\nexport { SimPrim };\n//# sourceMappingURL=simprim.js.map","references":[],"map":"{\"version\":3,\"file\":\"simprim.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/simprim.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/kosei/Documents/myLibrary/SimPrim/node_modules/.cache/rollup-plugin-typescript2/placeholder/simprim.d.ts","writeByteOrderMark":false,"text":"declare class SimPrim {\n    private inputCvs;\n    private img;\n    private inputCtx;\n    private trimming;\n    private previewCvs;\n    private cx;\n    private cy;\n    private dx;\n    private dy;\n    private beforeDx;\n    private beforeDy;\n    private scaleWidth;\n    private scaleHeight;\n    private resizing;\n    private dragging;\n    private isDragging;\n    private decisionWH;\n    private isAnimating;\n    private defaultCursor;\n    private drawTrimmingWidth;\n    private drawTrimmingHeight;\n    private draggingFrame;\n    constructor(inputCvs: HTMLCanvasElement);\n    /**\n     * Initialize the SimPrim instance with an image, preview canvas, and trimming path.\n     * @param img - The image to be edited.\n     * @param trimmingPath - The path to the trimming image.\n     * @param inputCvsHeight - Optional : The height of the input canvas when height is longer than width.　If you want to trim a vertical image, you must explicitly specify it.\n     * @param inputCvsWidth - Optional : The width of the input canvas when height is longer than width. If you want to trim a vertical image, you must explicitly specify it.\n     */\n    init(img: HTMLImageElement, trimmingPath: string, inputCvsHeight?: String, inputCvsWidth?: String): void;\n    /**\n     * Detects mouse drag events on the canvas and allows for dragging the trimming area.\n     * @param previewCvs - Optional : The canvas for previewing the trimmed image.\n     */\n    dragDetection(previewCvs?: HTMLCanvasElement): void;\n    /**\n     * Detects mouse drag events on the corners of the trimming area, allowing it to be resized.\n     */\n    sizeChange(): void;\n    private previewImg;\n    /**\n     * Exports the trimmed image to a specified canvas.\n     * @param exportCvs - The canvas to which the trimmed image will be exported.\n     */\n    exportImg(exportCvs: HTMLCanvasElement): void;\n}\nexport { SimPrim };\n"}}
