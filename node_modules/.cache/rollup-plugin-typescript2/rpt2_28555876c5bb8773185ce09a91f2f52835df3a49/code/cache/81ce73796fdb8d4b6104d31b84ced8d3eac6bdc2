{"code":"/*! SimPrim-Simple Image Trimming Library v1.0.0 | Nfolio | ISC | https://github.com/Nfolio567/SimPrim */\nclass SimPrim {\n    constructor(inputCvs) {\n        this.VERSION = \"1.1.beta\";\n        this.scaleWidth = 0; // Ratio of canvas width to client width\n        this.scaleHeight = 0; // Ratio of canvas height to client height\n        this.resizing = false; // Whether resizing is in progress\n        this.dragging = false; // Drag flag within the area\n        this.isDragging = false; // Whether dragging is in progress\n        this.decisionWH = false; // Whether the image is landscape or portrait\n        this.isAnimating = false; // Whether animation is in progress\n        this.defaultCursor = true; // Default cursor flag\n        this.drawTrimmingWidth = 0; // Width of the trimming area\n        this.drawTrimmingHeight = 0; // Height of the trimming area\n        this.inputCvs = inputCvs;\n        this.inputCtx = this.inputCvs.getContext(\"2d\");\n    }\n    /**\n     * Initialize the SimPrim instance with an image, preview canvas, and trimming path.\n     * @param img - The image to be edited.\n     * @param inputCvsHeight - Optional : The height of the input canvas when height is longer than width. If you want to trim a vertical image, you must explicitly specify it.\n     * @param inputCvsWidth - Optional : The width of the input canvas when height is longer than width. If you want to trim a vertical image, you must explicitly specify it.\n     * @param trimmingPath - The path to the trimming image(Default : https://cdn.nfolio.one/trimming.png).\n     */\n    init(img, inputCvsHeight, inputCvsWidth, trimmingPath = \"https://cdn.nfolio.one/trimming.png\") {\n        var _a;\n        // Initialize variables\n        this.img = img;\n        let drawWidth = 0;\n        let drawHeight = 0;\n        this.cx = 0;\n        this.cy = 0;\n        this.dx = 0;\n        this.dy = 0;\n        this.beforeDx = 0;\n        this.beforeDy = 0;\n        this.resizable = false;\n        this.inputCvs.width = this.img.width;\n        this.inputCvs.height = this.img.height;\n        // Determine aspect ratio and set height priority for portrait images\n        if (this.img.width <= this.img.height) {\n            this.decisionWH = false;\n            this.inputCvs.style.cssText += \"height:\" + inputCvsHeight + \";\" + \"width:\" + inputCvsWidth + \";\";\n        }\n        else {\n            this.decisionWH = true;\n        }\n        // Set width and height for drawing the image on the canvas\n        drawWidth = this.inputCvs.width;\n        drawHeight = this.inputCvs.height;\n        (_a = this.inputCtx) === null || _a === void 0 ? void 0 : _a.drawImage(this.img, 0, 0, this.img.width, this.img.height, 0, 0, drawWidth, drawHeight);\n        // Initialize trimming image\n        const trimming = new Image();\n        trimming.crossOrigin = \"anonymous\";\n        this.trimming = trimming;\n        if (this.decisionWH) {\n            this.drawTrimmingHeight = (this.inputCvs.height / 3) * 2;\n            this.drawTrimmingWidth = this.drawTrimmingHeight;\n        }\n        else {\n            this.drawTrimmingWidth = (this.inputCvs.width / 3) * 2;\n            this.drawTrimmingHeight = this.drawTrimmingWidth;\n        }\n        this.trimming.onload = () => {\n            var _a;\n            if (this.trimming && this.dx !== undefined && this.dy !== undefined) {\n                (_a = this.inputCtx) === null || _a === void 0 ? void 0 : _a.drawImage(this.trimming, 0, 0, trimming.width, trimming.height, this.dx, this.dy, this.drawTrimmingWidth, this.drawTrimmingHeight);\n            }\n        };\n        this.trimming.src = trimmingPath;\n        this.inputCvs.addEventListener(\"mousemove\", () => {\n            if (this.defaultCursor) {\n                this.inputCvs.style.cursor = \"default\"; // Reset mouse to default\n            }\n        });\n        // Use window to allow dragging even if the mouse leaves the canvas\n        window.addEventListener(\"mouseup\", () => {\n            this.isDragging = false;\n            this.dragging = false;\n            this.resizing = false;\n            //if (this.draggingFrame) cancelAnimationFrame(this.draggingFrame); // Cancel existing animation\n        });\n    }\n    /**\n     * Detects mouse drag events on the canvas and allows for dragging the trimming area.\n     * @param previewCvs - Optional : The canvas for previewing the trimmed image.\n     */\n    dragDetection(previewCvs) {\n        let property = \"\"; // Where the mouse is now\n        let beforeProperty = \"\";\n        let beforeWidth = 0; // Width before resizing\n        let beforeHeight = 0; // Height before resizing\n        this.previewCvs = previewCvs;\n        const previewCtx = previewCvs === null || previewCvs === void 0 ? void 0 : previewCvs.getContext(\"2d\");\n        if (this.previewCvs && previewCtx)\n            this.previewImg(this.previewCvs, previewCtx);\n        this.inputCvs.addEventListener(\"mousedown\", () => {\n            this.isDragging = true; // Drag flag\n        });\n        this.inputCvs.addEventListener(\"mousemove\", (e) => {\n            //if (this.draggingFrame) cancelAnimationFrame(this.draggingFrame); // Cancel existing animation\n            if (this.defaultCursor) {\n                this.inputCvs.style.cursor = \"default\"; // Reset mouse to default\n            }\n            this.scaleWidth = this.inputCvs.width / this.inputCvs.clientWidth; // Calculate ratio\n            this.scaleHeight = this.inputCvs.height / this.inputCvs.clientHeight; // Calculate ratio\n            if (this.dx !== undefined)\n                this.cx = this.dx / this.scaleWidth + this.drawTrimmingWidth / this.scaleWidth / 2; // Calculate center coordinate\n            if (this.dy !== undefined)\n                this.cy = this.dy / this.scaleHeight + this.drawTrimmingHeight / this.scaleHeight / 2; // Calculate center coordinate\n            if (this.cx !== undefined && this.cy !== undefined) {\n                if (e.offsetX >= this.cx - 10 && e.offsetX <= this.cx + 10 && e.offsetY >= this.cy - 10 && e.offsetY <= this.cy + 10) {\n                    this.inputCvs.style.cursor = \"move\"; // Change mouse to move cursor\n                    this.defaultCursor = false;\n                    if (this.isDragging) {\n                        this.dragging = true;\n                        this.isAnimating = true;\n                    }\n                }\n                else {\n                    this.defaultCursor = true;\n                }\n            }\n            // Mouseover detection for resizable area\n            if (this.dx !== undefined && this.dy !== undefined /* && !this.resizing*/) {\n                // Left resizable area\n                if (e.offsetX * this.scaleWidth >= this.dx - 15 && e.offsetX * this.scaleWidth <= this.dx + 15) {\n                    // Top left\n                    if (e.offsetY * this.scaleHeight >= this.dy - 15 && e.offsetY * this.scaleHeight <= this.dy + 15) {\n                        property = \"upL\";\n                        if (!this.resizing)\n                            this.inputCvs.style.cursor = \"nwse-resize\";\n                        this.defaultCursor = false;\n                        if (this.isDragging) {\n                            this.resizing = true;\n                            this.isAnimating = true;\n                        }\n                    }\n                    else {\n                        this.defaultCursor = true;\n                    }\n                    // Bottom left\n                    if (e.offsetY * this.scaleHeight >= this.dy + this.drawTrimmingHeight - 15 && e.offsetY * this.scaleHeight <= this.dy + this.drawTrimmingHeight + 15) {\n                        property = \"downL\";\n                        if (!this.resizing)\n                            this.inputCvs.style.cursor = \"nesw-resize\";\n                        this.defaultCursor = false;\n                        if (this.isDragging) {\n                            this.resizing = true;\n                            this.isAnimating = true;\n                        }\n                    }\n                    else {\n                        this.defaultCursor = true;\n                    }\n                }\n                else {\n                    this.defaultCursor = true;\n                }\n                // Right resizable area\n                if (e.offsetX * this.scaleWidth >= this.dx + this.drawTrimmingWidth - 15 && e.offsetX * this.scaleWidth <= this.dx + this.drawTrimmingWidth + 15) {\n                    // Top right\n                    if (e.offsetY * this.scaleHeight >= this.dy - 15 && e.offsetY * this.scaleHeight <= this.dy + 15) {\n                        property = \"upR\";\n                        if (!this.resizing)\n                            this.inputCvs.style.cursor = \"nesw-resize\";\n                        this.defaultCursor = false;\n                        if (this.isDragging) {\n                            this.resizing = true;\n                            this.isAnimating = true;\n                        }\n                    }\n                    else {\n                        this.defaultCursor = true;\n                    }\n                    // Bottom right\n                    if (e.offsetY * this.scaleHeight >= this.dy + this.drawTrimmingHeight - 15 && e.offsetY * this.scaleHeight <= this.dy + this.drawTrimmingHeight + 15) {\n                        property = \"downR\";\n                        if (!this.resizing)\n                            this.inputCvs.style.cursor = \"nwse-resize\";\n                        this.defaultCursor = false;\n                        if (this.isDragging) {\n                            this.resizing = true;\n                            this.isAnimating = true;\n                        }\n                    }\n                    else {\n                        this.defaultCursor = true;\n                    }\n                }\n                else {\n                    this.defaultCursor = true;\n                }\n            }\n            if (previewCtx)\n                this.requestFrame(previewCtx, e, property, beforeProperty, beforeWidth, beforeHeight);\n        });\n    }\n    requestFrame(previewCtx, e, property, beforeProperty, beforeWidth, beforeHeight) {\n        if (!this.isAnimating)\n            return;\n        requestAnimationFrame(() => {\n            this.moveDrag(e);\n            if (this.previewCvs && previewCtx)\n                this.previewImg(this.previewCvs, previewCtx); // Draw to preview canvas\n            if (this.resizable)\n                this.resizeDrag(e, property, beforeProperty, beforeWidth, beforeHeight);\n            console.log(this.resizable + \",\" + this.resizing);\n        });\n        if (!this.dragging && !this.resizing) {\n            this.isAnimating = false;\n        }\n    }\n    /**\n     * Detects mouse drag events on the corners of the trimming area, allowing it to be resized.\n     */\n    sizeChange() {\n        this.resizable = true;\n    }\n    resizeDrag(e, property, beforeProperty, beforeWidth, beforeHeight) {\n        const zoomClearance = 2;\n        beforeProperty = property;\n        funcResizing.call(this, e);\n        function funcResizing(e) {\n            var _a, _b, _c, _d, _e;\n            // Trimming area resizing process\n            if (this.resizing && this.dx !== undefined && this.dy !== undefined) {\n                if (this.drawTrimmingWidth <= 0 || this.drawTrimmingHeight <= 0) {\n                    this.drawTrimmingHeight = 0;\n                    this.drawTrimmingWidth = this.drawTrimmingHeight;\n                }\n                this.dragging = false;\n                property = beforeProperty;\n                this.isAnimating = true;\n                beforeWidth = this.drawTrimmingWidth;\n                beforeHeight = this.drawTrimmingHeight;\n                console.log(property);\n                if (property == \"downR\" && this.img !== undefined) {\n                    this.inputCvs.style.cursor = \"nwse-resize\";\n                    // Resize detection\n                    if (e.movementX != 0 && e.movementY == 0)\n                        this.drawTrimmingWidth += (e.movementX * this.scaleWidth) / zoomClearance;\n                    if (e.movementY != 0 && e.movementX == 0)\n                        this.drawTrimmingWidth += (e.movementY * this.scaleHeight) / zoomClearance;\n                    if (e.movementX != 0 && e.movementY != 0) {\n                        this.drawTrimmingWidth += (e.movementX * this.scaleWidth) / zoomClearance;\n                        this.drawTrimmingWidth += (e.movementY * this.scaleHeight) / zoomClearance;\n                    }\n                    this.drawTrimmingHeight = this.drawTrimmingWidth;\n                    // Out-of-bounds check\n                    if (this.dx + this.drawTrimmingWidth >= this.img.width) {\n                        this.drawTrimmingWidth = this.img.width - this.dx;\n                        this.drawTrimmingHeight = this.drawTrimmingWidth;\n                    }\n                    if (this.dy + this.drawTrimmingHeight >= this.img.height) {\n                        this.drawTrimmingHeight = this.img.height - this.dy;\n                        this.drawTrimmingWidth = this.drawTrimmingHeight;\n                    }\n                    (_a = this.inputCtx) === null || _a === void 0 ? void 0 : _a.drawImage(this.img, this.dx - 1, this.dy - 1, beforeWidth + 2, beforeHeight + 2, this.dx - 1, this.dy - 1, beforeWidth + 2, beforeHeight + 2);\n                    console.log(\"unkoooooooooooooooo\");\n                }\n                if (property == \"upR\" && this.img) {\n                    this.beforeDy = this.dy;\n                    this.inputCvs.style.cursor = \"nesw-resize\";\n                    // Resize detection\n                    if (e.movementX != 0 && e.movementY == 0) {\n                        this.dy -= (e.movementX * this.scaleWidth) / zoomClearance;\n                        this.drawTrimmingWidth += (e.movementX * this.scaleWidth) / zoomClearance;\n                    }\n                    if (e.movementY != 0 && e.movementX == 0) {\n                        this.dy += (e.movementY * this.scaleHeight) / zoomClearance;\n                        this.drawTrimmingWidth -= (e.movementY * this.scaleHeight) / zoomClearance;\n                    }\n                    if (e.movementX != 0 && e.movementY != 0) {\n                        this.dy -= (e.movementX * this.scaleWidth) / zoomClearance;\n                        this.dy += (e.movementY * this.scaleHeight) / zoomClearance;\n                        this.drawTrimmingWidth += (e.movementX * this.scaleWidth) / zoomClearance;\n                        this.drawTrimmingWidth -= (e.movementY * this.scaleHeight) / zoomClearance;\n                    }\n                    this.drawTrimmingHeight = this.drawTrimmingWidth;\n                    // Out-of-bounds check\n                    if (this.dx + this.drawTrimmingWidth >= this.img.width)\n                        this.drawTrimmingWidth = this.img.width - this.dx;\n                    if (this.dy <= 0) {\n                        this.dy = 0;\n                        this.drawTrimmingHeight = beforeHeight;\n                        this.drawTrimmingWidth = beforeWidth;\n                    }\n                    (_b = this.inputCtx) === null || _b === void 0 ? void 0 : _b.drawImage(this.img, this.dx - 1, this.beforeDy - 1, beforeWidth + 2, beforeHeight + 2, this.dx - 1, this.beforeDy - 1, beforeWidth + 2, beforeHeight + 2);\n                }\n                if (property == \"downL\" && this.img) {\n                    this.beforeDx = this.dx;\n                    this.inputCvs.style.cursor = \"nesw-resize\";\n                    // Resize detection\n                    if (e.movementX != 0 && e.movementY == 0) {\n                        this.dx += (e.movementX * this.scaleWidth) / zoomClearance;\n                        this.drawTrimmingWidth -= (e.movementX * this.scaleWidth) / zoomClearance;\n                    }\n                    if (e.movementY != 0 && e.movementX == 0) {\n                        this.dx -= (e.movementY * this.scaleHeight) / zoomClearance;\n                        this.drawTrimmingWidth += (e.movementY * this.scaleHeight) / zoomClearance;\n                    }\n                    if (e.movementX != 0 && e.movementY != 0) {\n                        this.dx += (e.movementX * this.scaleWidth) / zoomClearance;\n                        this.dx -= (e.movementY * this.scaleHeight) / zoomClearance;\n                        this.drawTrimmingWidth -= (e.movementX * this.scaleWidth) / zoomClearance;\n                        this.drawTrimmingWidth += (e.movementY * this.scaleHeight) / zoomClearance;\n                    }\n                    this.drawTrimmingHeight = this.drawTrimmingWidth;\n                    // Out-of-bounds check\n                    if (this.dx <= 0) {\n                        this.dx = 0;\n                        this.drawTrimmingWidth = beforeWidth;\n                        this.drawTrimmingHeight = beforeHeight;\n                    }\n                    if (this.dy + this.drawTrimmingHeight >= this.img.height) {\n                        this.drawTrimmingHeight = this.img.height - this.dy;\n                        this.drawTrimmingWidth = this.drawTrimmingHeight;\n                        this.dx = this.beforeDx;\n                    }\n                    (_c = this.inputCtx) === null || _c === void 0 ? void 0 : _c.drawImage(this.img, this.beforeDx - 1, this.dy - 1, beforeWidth + 2, beforeHeight + 2, this.beforeDx - 1, this.dy - 1, beforeWidth + 2, beforeHeight + 2);\n                }\n                if (property == \"upL\") {\n                    this.beforeDx = this.dx;\n                    this.beforeDy = this.dy;\n                    this.inputCvs.style.cursor = \"nwse-resize\";\n                    // Resize detection\n                    if (e.movementX != 0 && e.movementY == 0) {\n                        this.dx += (e.movementX * this.scaleWidth) / zoomClearance;\n                        this.dy += (e.movementX * this.scaleWidth) / zoomClearance;\n                        this.drawTrimmingWidth -= (e.movementX * this.scaleWidth) / zoomClearance;\n                    }\n                    if (e.movementY != 0 && e.movementX == 0) {\n                        this.dx += (e.movementY * this.scaleHeight) / zoomClearance;\n                        this.dy += (e.movementY * this.scaleHeight) / zoomClearance;\n                        this.drawTrimmingWidth -= (e.movementY * this.scaleHeight) / zoomClearance;\n                    }\n                    if (e.movementX != 0 && e.movementY != 0) {\n                        this.dx += (e.movementX * this.scaleWidth) / zoomClearance;\n                        this.dy += (e.movementX * this.scaleWidth) / zoomClearance;\n                        this.dx += (e.movementY * this.scaleHeight) / zoomClearance;\n                        this.dy += (e.movementY * this.scaleHeight) / zoomClearance;\n                        this.drawTrimmingWidth -= (e.movementX * this.scaleWidth) / zoomClearance;\n                        this.drawTrimmingWidth -= (e.movementY * this.scaleHeight) / zoomClearance;\n                    }\n                    this.drawTrimmingHeight = this.drawTrimmingWidth;\n                    // Out-of-bounds check\n                    if (this.dx <= 0) {\n                        this.dx = 0;\n                        this.dy = this.beforeDy;\n                        this.drawTrimmingWidth = beforeWidth;\n                        this.drawTrimmingHeight = beforeHeight;\n                    }\n                    if (this.dy <= 0) {\n                        this.dy = 0;\n                        this.dx = this.beforeDx;\n                        this.drawTrimmingWidth = beforeWidth;\n                        this.drawTrimmingHeight = beforeHeight;\n                    }\n                    if (this.img)\n                        (_d = this.inputCtx) === null || _d === void 0 ? void 0 : _d.drawImage(this.img, this.beforeDx - 1, this.beforeDy - 1, beforeWidth + 2, beforeHeight + 2, this.beforeDx - 1, this.beforeDy - 1, beforeWidth + 2, beforeHeight + 2);\n                }\n                if (this.trimming)\n                    (_e = this.inputCtx) === null || _e === void 0 ? void 0 : _e.drawImage(this.trimming, 0, 0, this.trimming.width, this.trimming.height, this.dx, this.dy, this.drawTrimmingWidth, this.drawTrimmingHeight);\n            }\n        }\n    }\n    // Draw the trimming area to the preview canvas\n    previewImg(previewCvs, previewCtx) {\n        previewCtx === null || previewCtx === void 0 ? void 0 : previewCtx.clearRect(0, 0, previewCvs.width, previewCvs.height);\n        if (this.img && this.dx !== undefined && this.dy !== undefined)\n            previewCtx === null || previewCtx === void 0 ? void 0 : previewCtx.drawImage(this.img, this.dx, this.dy, this.drawTrimmingWidth, this.drawTrimmingHeight, 0, 0, previewCvs.width, previewCvs.height);\n    }\n    moveDrag(e) {\n        var _a, _b;\n        if (this.dragging) {\n            this.inputCvs.style.cursor = \"move\"; // Keep move cursor during dragging even outside the specified area\n            if (this.dx !== undefined)\n                this.beforeDx = this.dx;\n            if (this.dy !== undefined)\n                this.beforeDy = this.dy;\n            // Move the trimming area by mouse drag\n            this.dx = (e.offsetX - this.drawTrimmingWidth / this.scaleWidth / 2) * this.scaleWidth;\n            this.dy = (e.offsetY - this.drawTrimmingHeight / this.scaleHeight / 2) * this.scaleHeight;\n            // Check for out-of-bounds of the trimming area\n            if (this.trimming && this.img) {\n                if (this.dx <= 0)\n                    this.dx = 0;\n                if (this.dy <= 0)\n                    this.dy = 0;\n                if (this.dx + this.drawTrimmingWidth >= this.img.width)\n                    this.dx = this.img.width - this.drawTrimmingWidth;\n                if (this.dy + this.drawTrimmingHeight >= this.img.height)\n                    this.dy = this.img.height - this.drawTrimmingHeight;\n            }\n            if (this.img && this.trimming && this.dx !== undefined && this.dy !== undefined && this.beforeDx !== undefined && this.beforeDy !== undefined) {\n                (_a = this.inputCtx) === null || _a === void 0 ? void 0 : _a.drawImage(this.img, this.beforeDx - 1, this.beforeDy - 1, this.drawTrimmingWidth + 2, this.drawTrimmingHeight + 2, this.beforeDx - 1, this.beforeDy - 1, this.drawTrimmingWidth + 2, this.drawTrimmingHeight + 2);\n                (_b = this.inputCtx) === null || _b === void 0 ? void 0 : _b.drawImage(this.trimming, 0, 0, this.trimming.width, this.trimming.height, this.dx, this.dy, this.drawTrimmingWidth, this.drawTrimmingHeight);\n            }\n        }\n    }\n    /**\n     * Exports the trimmed image to a specified canvas.\n     * @param exportCvs - The canvas to which the trimmed image will be exported.\n     */\n    // Draw the trimming area to the export canvas\n    exportImg(exportCvs) {\n        var _a;\n        let exportCtx = exportCvs.getContext(\"2d\");\n        let exportImgObject = (_a = this.previewCvs) === null || _a === void 0 ? void 0 : _a.toDataURL();\n        let exportImgElement = new Image();\n        exportImgElement.onload = () => {\n            if (exportImgObject)\n                exportCtx === null || exportCtx === void 0 ? void 0 : exportCtx.drawImage(exportImgElement, 0, 0);\n        };\n        if (exportImgObject)\n            exportImgElement.src = exportImgObject;\n    }\n}\nif (typeof window !== \"undefined\") {\n    window.SimPrim = SimPrim;\n}\nexport { SimPrim };\n//# sourceMappingURL=simprim.js.map","references":[],"map":"{\"version\":3,\"file\":\"simprim.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/simprim.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/kosei/Documents/myLibrary/SimPrim/node_modules/.cache/rollup-plugin-typescript2/placeholder/simprim.d.ts","writeByteOrderMark":false,"text":"/*! SimPrim-Simple Image Trimming Library v1.0.0 | Nfolio | ISC | https://github.com/Nfolio567/SimPrim */\ndeclare class SimPrim {\n    VERSION: string;\n    private inputCvs;\n    private img;\n    private inputCtx;\n    private trimming;\n    private previewCvs;\n    private cx;\n    private cy;\n    private dx;\n    private dy;\n    private beforeDx;\n    private beforeDy;\n    private scaleWidth;\n    private scaleHeight;\n    private resizing;\n    private dragging;\n    private resizable;\n    private isDragging;\n    private decisionWH;\n    private isAnimating;\n    private defaultCursor;\n    private drawTrimmingWidth;\n    private drawTrimmingHeight;\n    constructor(inputCvs: HTMLCanvasElement);\n    /**\n     * Initialize the SimPrim instance with an image, preview canvas, and trimming path.\n     * @param img - The image to be edited.\n     * @param inputCvsHeight - Optional : The height of the input canvas when height is longer than width. If you want to trim a vertical image, you must explicitly specify it.\n     * @param inputCvsWidth - Optional : The width of the input canvas when height is longer than width. If you want to trim a vertical image, you must explicitly specify it.\n     * @param trimmingPath - The path to the trimming image(Default : https://cdn.nfolio.one/trimming.png).\n     */\n    init(img: HTMLImageElement, inputCvsHeight?: String, inputCvsWidth?: String, trimmingPath?: string): void;\n    /**\n     * Detects mouse drag events on the canvas and allows for dragging the trimming area.\n     * @param previewCvs - Optional : The canvas for previewing the trimmed image.\n     */\n    dragDetection(previewCvs?: HTMLCanvasElement): void;\n    private requestFrame;\n    /**\n     * Detects mouse drag events on the corners of the trimming area, allowing it to be resized.\n     */\n    sizeChange(): void;\n    private resizeDrag;\n    private previewImg;\n    private moveDrag;\n    /**\n     * Exports the trimmed image to a specified canvas.\n     * @param exportCvs - The canvas to which the trimmed image will be exported.\n     */\n    exportImg(exportCvs: HTMLCanvasElement): void;\n}\nexport { SimPrim };\n"}}
